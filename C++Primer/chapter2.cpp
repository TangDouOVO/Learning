/*
2.11
指出下面语句是声明还是定义
(1)extern int ix = 1024 定义
(2)int iy 声明
(3)extern int iz 声明

2.15
下面的哪个定义是不合法的？
(1)int ival = 1.01 √
(2)int & rval1 = 1.01 ×:引用必须指向一个实际存在的对象，而不是字面值常量
(3)int & rval2 = ival √
(4)int & rval3 ×：引用必须初始化 
 
2.16
下面哪些是合法的
int i = 0, &r1 = i; double d = 0, &r2 = d; 
(1)r2 = 3.1415926   √: 将 3.1415926 赋值给d 
(2)r2 = r1 √ 将i的值赋值给d 
(3)i = r2  √ 将d的值赋值给i 
(4)r1 = d  √ 将d的值赋值给i 

2.19
指针和引用的主要区别
（1）指针本身就是一个对象，允许对指针赋值和拷贝，而且在指针的声明周期内它可以指向几个不同的对象；
引用不是一个对象，无法令引用重新绑定到另一个对象
（2）指针无须在定义时赋初值，和其他内置函数一样，在块的作用域内定义的指针如果没有被初始化，也将拥有一个不确定的值；
引用则必须在定义时赋初值。 

2.21
下面哪些是合法的
int i = 0;
(1)double * dp = &i ×：类型不匹配 
(2)int * ip = i ×：不能直接将int变量赋给int指针，正确的做法是通过取地址运算&i得到变量i在内存中的地址，然后将地址赋值给指针 
(3)int* = = &i √

提示：在C++程序中，应该尽量初始化所有指针，并且尽可能等定义了对象之后再定义指向它的指针。如果实在不清楚指针应该指向何处，
就把它初始化为nullptr或是0，这样程序就能检测并知道它有没有指向一个具体的对象了。 



*/
